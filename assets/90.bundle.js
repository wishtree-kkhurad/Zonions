(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[90],{

/***/ "./assets/src/routes/extensions/map/ammap/flightRoutes/Components/FlightRoutesMap.js":
/*!*******************************************************************************************!*\
  !*** ./assets/src/routes/extensions/map/ammap/flightRoutes/Components/FlightRoutesMap.js ***!
  \*******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _amcharts_amcharts3_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @amcharts/amcharts3-react */ \"./node_modules/@amcharts/amcharts3-react/index.js\");\n/* harmony import */ var _amcharts_amcharts3_react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_amcharts_amcharts3_react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nconst FlightRoutesMap = () => {\n  const targetSVG = \"M9,0C4.029,0,0,4.029,0,9s4.029,9,9,9s9-4.029,9-9S13.971,0,9,0z M9,15.93 c-3.83,0-6.93-3.1-6.93-6.93S5.17,2.07,9,2.07s6.93,3.1,6.93,6.93S12.83,15.93,9,15.93 M12.5,9c0,1.933-1.567,3.5-3.5,3.5S5.5,10.933,5.5,9S7.067,5.5,9,5.5 S12.5,7.067,12.5,9z\";\n  const planeSVG = \"M19.671,8.11l-2.777,2.777l-3.837-0.861c0.362-0.505,0.916-1.683,0.464-2.135c-0.518-0.517-1.979,0.278-2.305,0.604l-0.913,0.913L7.614,8.804l-2.021,2.021l2.232,1.061l-0.082,0.082l1.701,1.701l0.688-0.687l3.164,1.504L9.571,18.21H6.413l-1.137,1.138l3.6,0.948l1.83,1.83l0.947,3.598l1.137-1.137V21.43l3.725-3.725l1.504,3.164l-0.687,0.687l1.702,1.701l0.081-0.081l1.062,2.231l2.02-2.02l-0.604-2.689l0.912-0.912c0.326-0.326,1.121-1.789,0.604-2.306c-0.452-0.452-1.63,0.101-2.135,0.464l-0.861-3.838l2.777-2.777c0.947-0.947,3.599-4.862,2.62-5.839C24.533,4.512,20.618,7.163,19.671,8.11z\";\n  const config = {\n    \"type\": \"map\",\n    \"theme\": \"none\",\n    \"dataProvider\": {\n      \"map\": \"worldLow\",\n      \"linkToObject\": \"london\",\n      \"images\": [{\n        \"id\": \"london\",\n        \"color\": \"#000000\",\n        \"svgPath\": targetSVG,\n        \"title\": \"London\",\n        \"latitude\": 51.5002,\n        \"longitude\": -0.1262,\n        \"scale\": 1.5,\n        \"zoomLevel\": 2.74,\n        \"zoomLongitude\": -20.1341,\n        \"zoomLatitude\": 49.1712,\n        \"lines\": [{\n          \"latitudes\": [51.5002, 50.4422],\n          \"longitudes\": [-0.1262, 30.5367]\n        }, {\n          \"latitudes\": [51.5002, 46.9480],\n          \"longitudes\": [-0.1262, 7.4481]\n        }, {\n          \"latitudes\": [51.5002, 59.3328],\n          \"longitudes\": [-0.1262, 18.0645]\n        }, {\n          \"latitudes\": [51.5002, 40.4167],\n          \"longitudes\": [-0.1262, -3.7033]\n        }, {\n          \"latitudes\": [51.5002, 46.0514],\n          \"longitudes\": [-0.1262, 14.5060]\n        }, {\n          \"latitudes\": [51.5002, 48.2116],\n          \"longitudes\": [-0.1262, 17.1547]\n        }, {\n          \"latitudes\": [51.5002, 44.8048],\n          \"longitudes\": [-0.1262, 20.4781]\n        }, {\n          \"latitudes\": [51.5002, 55.7558],\n          \"longitudes\": [-0.1262, 37.6176]\n        }, {\n          \"latitudes\": [51.5002, 38.7072],\n          \"longitudes\": [-0.1262, -9.1355]\n        }, {\n          \"latitudes\": [51.5002, 54.6896],\n          \"longitudes\": [-0.1262, 25.2799]\n        }, {\n          \"latitudes\": [51.5002, 64.1353],\n          \"longitudes\": [-0.1262, -21.8952]\n        }, {\n          \"latitudes\": [51.5002, 40.4300],\n          \"longitudes\": [-0.1262, -74.0000]\n        }],\n        \"images\": [{\n          \"label\": \"Flights from London\",\n          \"svgPath\": planeSVG,\n          \"left\": 100,\n          \"top\": 45,\n          \"labelShiftY\": 5,\n          \"color\": \"#CC0000\",\n          \"labelColor\": \"#CC0000\",\n          \"labelRollOverColor\": \"#CC0000\",\n          \"labelFontSize\": 20\n        }, {\n          \"label\": \"show flights from Vilnius\",\n          \"left\": 106,\n          \"top\": 70,\n          \"labelColor\": \"#000000\",\n          \"labelRollOverColor\": \"#CC0000\",\n          \"labelFontSize\": 11,\n          \"linkToObject\": \"vilnius\"\n        }]\n      }, {\n        \"id\": \"vilnius\",\n        \"color\": \"#000000\",\n        \"svgPath\": targetSVG,\n        \"title\": \"Vilnius\",\n        \"latitude\": 54.6896,\n        \"longitude\": 25.2799,\n        \"scale\": 1.5,\n        \"zoomLevel\": 4.92,\n        \"zoomLongitude\": 15.4492,\n        \"zoomLatitude\": 50.2631,\n        \"lines\": [{\n          \"latitudes\": [54.6896, 50.8371],\n          \"longitudes\": [25.2799, 4.3676]\n        }, {\n          \"latitudes\": [54.6896, 59.9138],\n          \"longitudes\": [25.2799, 10.7387]\n        }, {\n          \"latitudes\": [54.6896, 40.4167],\n          \"longitudes\": [25.2799, -3.7033]\n        }, {\n          \"latitudes\": [54.6896, 50.0878],\n          \"longitudes\": [25.2799, 14.4205]\n        }, {\n          \"latitudes\": [54.6896, 48.2116],\n          \"longitudes\": [25.2799, 17.1547]\n        }, {\n          \"latitudes\": [54.6896, 44.8048],\n          \"longitudes\": [25.2799, 20.4781]\n        }, {\n          \"latitudes\": [54.6896, 55.7558],\n          \"longitudes\": [25.2799, 37.6176]\n        }, {\n          \"latitudes\": [54.6896, 37.9792],\n          \"longitudes\": [25.2799, 23.7166]\n        }, {\n          \"latitudes\": [54.6896, 54.6896],\n          \"longitudes\": [25.2799, 25.2799]\n        }, {\n          \"latitudes\": [54.6896, 51.5002],\n          \"longitudes\": [25.2799, -0.1262]\n        }, {\n          \"latitudes\": [54.6896, 53.3441],\n          \"longitudes\": [25.2799, -6.2675]\n        }],\n        \"images\": [{\n          \"label\": \"Flights from Vilnius\",\n          \"svgPath\": planeSVG,\n          \"left\": 100,\n          \"top\": 45,\n          \"labelShiftY\": 5,\n          \"color\": \"#CC0000\",\n          \"labelColor\": \"#CC0000\",\n          \"labelRollOverColor\": \"#CC0000\",\n          \"labelFontSize\": 20\n        }, {\n          \"label\": \"show flights from London\",\n          \"left\": 106,\n          \"top\": 70,\n          \"labelColor\": \"#000000\",\n          \"labelRollOverColor\": \"#CC0000\",\n          \"labelFontSize\": 11,\n          \"linkToObject\": \"london\"\n        }]\n      }, {\n        \"svgPath\": targetSVG,\n        \"title\": \"Brussels\",\n        \"latitude\": 50.8371,\n        \"longitude\": 4.3676\n      }, {\n        \"svgPath\": targetSVG,\n        \"title\": \"Prague\",\n        \"latitude\": 50.0878,\n        \"longitude\": 14.4205\n      }, {\n        \"svgPath\": targetSVG,\n        \"title\": \"Athens\",\n        \"latitude\": 37.9792,\n        \"longitude\": 23.7166\n      }, {\n        \"svgPath\": targetSVG,\n        \"title\": \"Reykjavik\",\n        \"latitude\": 64.1353,\n        \"longitude\": -21.8952\n      }, {\n        \"svgPath\": targetSVG,\n        \"title\": \"Dublin\",\n        \"latitude\": 53.3441,\n        \"longitude\": -6.2675\n      }, {\n        \"svgPath\": targetSVG,\n        \"title\": \"Oslo\",\n        \"latitude\": 59.9138,\n        \"longitude\": 10.7387\n      }, {\n        \"svgPath\": targetSVG,\n        \"title\": \"Lisbon\",\n        \"latitude\": 38.7072,\n        \"longitude\": -9.1355\n      }, {\n        \"svgPath\": targetSVG,\n        \"title\": \"Moscow\",\n        \"latitude\": 55.7558,\n        \"longitude\": 37.6176\n      }, {\n        \"svgPath\": targetSVG,\n        \"title\": \"Belgrade\",\n        \"latitude\": 44.8048,\n        \"longitude\": 20.4781\n      }, {\n        \"svgPath\": targetSVG,\n        \"title\": \"Bratislava\",\n        \"latitude\": 48.2116,\n        \"longitude\": 17.1547\n      }, {\n        \"svgPath\": targetSVG,\n        \"title\": \"Ljubljana\",\n        \"latitude\": 46.0514,\n        \"longitude\": 14.5060\n      }, {\n        \"svgPath\": targetSVG,\n        \"title\": \"Madrid\",\n        \"latitude\": 40.4167,\n        \"longitude\": -3.7033\n      }, {\n        \"svgPath\": targetSVG,\n        \"title\": \"Stockholm\",\n        \"latitude\": 59.3328,\n        \"longitude\": 18.0645\n      }, {\n        \"svgPath\": targetSVG,\n        \"title\": \"Bern\",\n        \"latitude\": 46.9480,\n        \"longitude\": 7.4481\n      }, {\n        \"svgPath\": targetSVG,\n        \"title\": \"Kiev\",\n        \"latitude\": 50.4422,\n        \"longitude\": 30.5367\n      }, {\n        \"svgPath\": targetSVG,\n        \"title\": \"Paris\",\n        \"latitude\": 48.8567,\n        \"longitude\": 2.3510\n      }, {\n        \"svgPath\": targetSVG,\n        \"title\": \"New York\",\n        \"latitude\": 40.43,\n        \"longitude\": -74\n      }]\n    },\n    \"areasSettings\": {\n      \"unlistedAreasColor\": \"#FFCC00\"\n    },\n    \"imagesSettings\": {\n      \"color\": \"#CC0000\",\n      \"rollOverColor\": \"#CC0000\",\n      \"selectedColor\": \"#000000\"\n    },\n    \"linesSettings\": {\n      \"color\": \"#CC0000\",\n      \"alpha\": 0.4\n    },\n    \"balloon\": {\n      \"drop\": true\n    },\n    \"backgroundZoomsToTop\": true,\n    \"linesAboveImages\": true,\n    \"export\": {\n      \"enabled\": true\n    }\n  };\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"App\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_amcharts_amcharts3_react__WEBPACK_IMPORTED_MODULE_1___default.a.React, {\n    style: {\n      width: \"100%\",\n      height: \"500px\"\n    },\n    options: config\n  }));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (FlightRoutesMap);\n\n//# sourceURL=webpack:///./assets/src/routes/extensions/map/ammap/flightRoutes/Components/FlightRoutesMap.js?");

/***/ }),

/***/ "./assets/src/routes/extensions/map/ammap/flightRoutes/index.js":
/*!**********************************************************************!*\
  !*** ./assets/src/routes/extensions/map/ammap/flightRoutes/index.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ \"./node_modules/antd/es/index.js\");\n/* harmony import */ var _Components_FlightRoutesMap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Components/FlightRoutesMap */ \"./assets/src/routes/extensions/map/ammap/flightRoutes/Components/FlightRoutesMap.js\");\n/* harmony import */ var _util_IntlMessages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../util/IntlMessages */ \"./assets/src/util/IntlMessages.js\");\n\n\n\n\n\nconst FlightRoutes = () => {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(antd__WEBPACK_IMPORTED_MODULE_1__[\"Card\"], {\n    className: \"gx-card\",\n    title: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_util_IntlMessages__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n      id: \"sidebar.map.flight.routes\"\n    })\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Components_FlightRoutesMap__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (FlightRoutes);\n\n//# sourceURL=webpack:///./assets/src/routes/extensions/map/ammap/flightRoutes/index.js?");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts3-react/amcharts3-react.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts3-react/amcharts3-react.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function () {\r\n  function getType(x) {\r\n    // TODO make this faster ?\r\n    return {}.toString.call(x);\r\n  }\r\n\r\n  function hasOwnKey(obj, key) {\r\n    return {}.hasOwnProperty.call(obj, key);\r\n  }\r\n\r\n\r\n  function copyObject(x) {\r\n    var output = {};\r\n\r\n    // TODO use Object.keys ?\r\n    for (var key in x) {\r\n      if (hasOwnKey(x, key)) {\r\n        output[key] = copy(x[key]);\r\n      }\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  function copyArray(x) {\r\n    var length = x.length;\r\n\r\n    var output = new Array(length);\r\n\r\n    for (var i = 0; i < length; ++i) {\r\n      output[i] = copy(x[i]);\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  // TODO can this be made faster ?\r\n  // TODO what about regexps, etc. ?\r\n  function copy(x) {\r\n    switch (getType(x)) {\r\n    case \"[object Array]\":\r\n      return copyArray(x);\r\n\r\n    case \"[object Object]\":\r\n      return copyObject(x);\r\n\r\n    // TODO is this necessary ?\r\n    case \"[object Date]\":\r\n      return new Date(x.getTime());\r\n\r\n    default:\r\n      return x;\r\n    }\r\n  }\r\n\r\n\r\n  function isNaN(x) {\r\n    return x !== x;\r\n  }\r\n\r\n  function isNumberEqual(x, y) {\r\n    return x === y || (isNaN(x) && isNaN(y));\r\n  }\r\n\r\n\r\n  function removeChartListeners(chart, x, y) {\r\n    if (x !== y) {\r\n      // TODO is this necessary ?\r\n      if (x == null) {\r\n        x = [];\r\n      }\r\n\r\n      // TODO is this necessary ?\r\n      if (y == null) {\r\n        y = [];\r\n      }\r\n\r\n      var xLength = x.length;\r\n      var yLength = y.length;\r\n\r\n      for (var i = 0; i < xLength; ++i) {\r\n        var xValue = x[i];\r\n\r\n        var has = false;\r\n\r\n        // TODO make this faster ?\r\n        for (var j = 0; j < yLength; ++j) {\r\n          var yValue = y[j];\r\n\r\n          // TODO is this correct ?\r\n          if (xValue.event  === yValue.event &&\r\n              xValue.method === yValue.method) {\r\n            has = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (!has) {\r\n          // TODO is this correct ?\r\n          chart.removeListener(chart, xValue.event, xValue.method);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  function updateArray(a, x, y) {\r\n    var didUpdate = false;\r\n\r\n    if (x !== y) {\r\n      var xLength = x.length;\r\n      var yLength = y.length;\r\n\r\n      if (xLength !== yLength) {\r\n        a.length = yLength;\r\n        didUpdate = true;\r\n      }\r\n\r\n      for (var i = 0; i < yLength; ++i) {\r\n        if (i < xLength) {\r\n          if (update(a, i, x[i], y[i])) {\r\n            didUpdate = true;\r\n          }\r\n\r\n        } else {\r\n          // TODO make this faster ?\r\n          a[i] = copy(y[i]);\r\n          // TODO is this necessary ?\r\n          didUpdate = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return didUpdate;\r\n  }\r\n\r\n\r\n  function update(obj, key, x, y) {\r\n    var didUpdate = false;\r\n\r\n    if (x !== y) {\r\n      // https://github.com/amcharts/amcharts3-react/issues/40\r\n      if (hasOwnKey(obj, key)) {\r\n        var xType = getType(x);\r\n        var yType = getType(y);\r\n\r\n        if (xType === yType) {\r\n          switch (xType) {\r\n          case \"[object Array]\":\r\n            // TODO hacky, remove this after the following bug is fixed:\r\n            //      Zendesk #28040\r\n            //      https://codepen.io/team/amcharts/pen/0d61f559cda74682c0ca55d9a24a0f77\r\n            //      https://www.amcharts.com/kbase/forcing-grouping-stock-chart-data-specific-periods/\r\n            if (key === \"groupToPeriods\") {\r\n              // TODO is the copy necessary ?\r\n              obj[key] = copy(y);\r\n              didUpdate = true;\r\n\r\n            } else {\r\n              if (updateArray(obj[key], x, y)) {\r\n                didUpdate = true;\r\n              }\r\n            }\r\n            break;\r\n\r\n          case \"[object Object]\":\r\n            if (updateObject(obj[key], x, y)) {\r\n              didUpdate = true;\r\n            }\r\n            break;\r\n\r\n          case \"[object Date]\":\r\n            if (x.getTime() !== y.getTime()) {\r\n              // TODO make this faster ?\r\n              obj[key] = copy(y);\r\n              didUpdate = true;\r\n            }\r\n            break;\r\n\r\n          case \"[object Number]\":\r\n            if (!isNumberEqual(x, y)) {\r\n              // TODO is the copy necessary ?\r\n              obj[key] = copy(y);\r\n              didUpdate = true;\r\n            }\r\n            break;\r\n\r\n          default:\r\n            // TODO is the copy necessary ?\r\n            obj[key] = copy(y);\r\n            didUpdate = true;\r\n            break;\r\n          }\r\n\r\n        // TODO is this correct ?\r\n        } else {\r\n          // TODO make this faster ?\r\n          obj[key] = copy(y);\r\n          didUpdate = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return didUpdate;\r\n  }\r\n\r\n  function updateObject(chart, oldObj, newObj) {\r\n    var didUpdate = false;\r\n\r\n    if (oldObj !== newObj) {\r\n      // TODO use Object.keys ?\r\n      for (var key in newObj) {\r\n        if (hasOwnKey(newObj, key)) {\r\n          // TODO make this faster ?\r\n          if (hasOwnKey(oldObj, key)) {\r\n            // TODO should this count as an update ?\r\n            if (key === \"listeners\") {\r\n              // TODO make this faster ?\r\n              removeChartListeners(chart, oldObj[key], newObj[key]);\r\n            }\r\n\r\n            if (update(chart, key, oldObj[key], newObj[key])) {\r\n              didUpdate = true;\r\n            }\r\n\r\n          } else {\r\n            // TODO make this faster ?\r\n            chart[key] = copy(newObj[key]);\r\n            didUpdate = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      // TODO use Object.keys ?\r\n      for (var key in oldObj) {\r\n        if (hasOwnKey(oldObj, key) && !hasOwnKey(newObj, key)) {\r\n          if (key === \"listeners\") {\r\n            removeChartListeners(chart, oldObj[key], []);\r\n          }\r\n\r\n          delete chart[key];\r\n          didUpdate = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return didUpdate;\r\n  }\r\n\r\n\r\n  var id = 0;\r\n\r\n  AmCharts.React = createReactClass({\r\n    getInitialState: function () {\r\n      return {\r\n        id: \"__AmCharts_React_\" + (++id) + \"__\",\r\n        chart: null\r\n      };\r\n    },\r\n\r\n    componentDidMount: function () {\r\n      // AmCharts mutates the config object, so we have to make a deep copy to prevent that\r\n      var props = copy(this.props.options);\r\n\r\n      var chart = AmCharts.makeChart(this.state.id, props, this.props.delay);\r\n\r\n      this.setState({\r\n        chart: chart\r\n      });\r\n    },\r\n\r\n    // TODO is this correct ? should this use componentWillUpdate instead ?\r\n    componentDidUpdate: function (oldProps) {\r\n      if (this.state.chart) {\r\n        var didUpdate = updateObject(this.state.chart, oldProps.options, this.props.options);\r\n\r\n        // TODO make this faster\r\n        if (didUpdate) {\r\n          this.state.chart.validateNow(true);\r\n        }\r\n      }\r\n    },\r\n\r\n    componentWillUnmount: function () {\r\n      if (this.state.chart) {\r\n        this.state.chart.clear();\r\n      }\r\n    },\r\n\r\n    render: function () {\r\n      return React.createElement(\"div\", {\r\n        id: this.state.id,\r\n        className: this.props.className,\r\n        style: this.props.style\r\n      });\r\n    }\r\n  });\r\n})();\r\n\n\n//# sourceURL=webpack:///./node_modules/@amcharts/amcharts3-react/amcharts3-react.js?");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts3-react/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@amcharts/amcharts3-react/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("if (typeof window !== \"undefined\") {\r\n  window.React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\r\n  window.ReactDOM = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\r\n  window.createReactClass = __webpack_require__(/*! create-react-class */ \"./node_modules/create-react-class/index.js\");\r\n\r\n  __webpack_require__(/*! ./amcharts3-react.js */ \"./node_modules/@amcharts/amcharts3-react/amcharts3-react.js\");\r\n\r\n  module.exports = window.AmCharts;\r\n\r\n} else {\r\n  module.exports = {};\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/@amcharts/amcharts3-react/index.js?");

/***/ })

}]);